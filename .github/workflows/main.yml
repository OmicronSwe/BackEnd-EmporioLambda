name: Deploy Lambda functions

on: push

jobs:
  deploy:
    name: Deploy Lambda functions
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository üõé
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Install NPM dependencies
        run: npm install

      - name: Check Prettier
        run: npm run prettier-check

      - name: Test ESLint üõÇ
        run: npm run lint

      - name: Test Lambda function üëÆ
        uses: serverless/github-action@master
        with:
          args: invoke test

      - name: Set enviroment variables
        uses: rlespinasse/github-slug-action@v2.x

      # - name: Clean Package
      #  uses: serverless/github-action@master
      #  with:
      #    args: remove -s ${{env.GITHUB_REF_SLUG}}
      #  env:
      # SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
      # or if using AWS credentials directly
      #    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #   AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy function to local üöÄ‚≠ê
        if: env.GITHUB_REF_SLUG!='develop' && env.GITHUB_REF_SLUG!='master'
        uses: serverless/github-action@master
        with:
          args: deploy -s local
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy function to test üöÄüåü
        if: env.GITHUB_REF_SLUG=='develop'
        uses: serverless/github-action@master
        with:
          args: deploy -s test
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Deploy function to staging üöÄ‚ú®
        if: env.GITHUB_REF_SLUG=='master'
        uses: serverless/github-action@master
        with:
          args: deploy -s staging
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
